{"version":3,"file":"svg.js","sourceRoot":"","sources":["../src/svg.ts"],"names":[],"mappings":"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","sourcesContent":["import cssValueParser from 'postcss-value-parser'\n\nimport { parseCSSLength } from './css.js'\nimport {\n\tisElement,\n\tisSVGAnchorElement,\n\tisSVGElement,\n\tisSVGGraphicsElement,\n\tisSVGSVGElement,\n\tisSVGTextContentElement,\n\tisTextNode,\n\tsvgNamespace,\n} from './dom.js'\nimport { copyTextStyles } from './text.js'\nimport { TraversalContext } from './traversal.js'\nimport { assert, diagonale } from './util.js'\n\n/**\n * Recursively clone an `<svg>` element, inlining it into the output SVG document with the necessary transforms.\n */\nexport function handleSvgNode(node: Node, context: SvgTraversalContext): void {\n\tif (isElement(node)) {\n\t\tif (!isSVGElement(node)) {\n\t\t\treturn\n\t\t}\n\t\thandleSvgElement(node, context)\n\t} else if (isTextNode(node)) {\n\t\tconst clonedTextNode = node.cloneNode(true) as Text\n\t\tcontext.currentSvgParent.append(clonedTextNode)\n\t}\n}\n\nconst ignoredElements = new Set(['script', 'style', 'foreignElement'])\n\ninterface SvgTraversalContext extends Pick<TraversalContext, 'svgDocument' | 'currentSvgParent' | 'options'> {\n\t/**\n\t * A prefix to use for all ID to make them unique inside the output SVG document.\n\t */\n\treadonly idPrefix: string\n}\n\nconst URL_ID_REFERENCE_REGEX = /\\burl\\([\"']?#/\nexport function handleSvgElement(element: SVGElement, context: SvgTraversalContext): void {\n\tif (ignoredElements.has(element.tagName)) {\n\t\treturn\n\t}\n\n\tlet elementToAppend: SVGElement\n\tif (isSVGSVGElement(element)) {\n\t\tconst contentContainer = context.svgDocument.createElementNS(svgNamespace, 'g')\n\t\telementToAppend = contentContainer\n\t\tcontentContainer.classList.add('svg-content', ...element.classList)\n\t\tcontentContainer.dataset.viewBox = element.getAttribute('viewBox') ?? ''\n\t\tcontentContainer.dataset.width = element.getAttribute('width') ?? ''\n\t\tcontentContainer.dataset.height = element.getAttribute('height') ?? ''\n\n\t\t// Since the SVG is getting inlined into the output SVG, we need to transform its contents according to its\n\t\t// viewBox, width, height and preserveAspectRatio. We can use getScreenCTM() for this on one of its\n\t\t// SVGGraphicsElement children (in Chrome calling it on the <svg> works too, but not in Firefox:\n\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=873106).\n\t\tfor (const child of element.children) {\n\t\t\tif (!isSVGGraphicsElement(child)) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tlet viewBoxTransformMatrix =\n\t\t\t\t// When this function is called on an inline <svg> element in the original DOM, we want\n\t\t\t\t// getScreenCTM() to map it to the DOM coordinate system. When this function is called from\n\t\t\t\t// inlineResources() the <svg> is already embedded into the output <svg>. In that case the output\n\t\t\t\t// SVG already has a viewBox, and the coordinate system of the SVG is not equal to the coordinate\n\t\t\t\t// system of the screen, therefor we need to use getCTM() to map it into the output SVG's\n\t\t\t\t// coordinate system.\n\t\t\t\tchild.ownerDocument !== context.svgDocument &&\n\t\t\t\t// When we inline an SVG, we put a transform on it for the getScreenCTM(). When that SVG also\n\t\t\t\t// contains another SVG, the inner SVG should just get transformed relative to the outer SVG, not\n\t\t\t\t// relative to the screen, because the transforms will stack in the output SVG.\n\t\t\t\t!element.parentElement?.closest('svg')\n\t\t\t\t\t? child.getScreenCTM()\n\t\t\t\t\t: child.getCTM()\n\n\t\t\t// This should only be null if the <svg> is `display: none`\n\t\t\tif (!viewBoxTransformMatrix) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\t// Make sure to handle a child that already has a transform. That transform should only apply to the\n\t\t\t// child, not to the entire SVG contents, so we need to calculate it out.\n\t\t\tif (child.transform.baseVal.numberOfItems > 0) {\n\t\t\t\tchild.transform.baseVal.consolidate()\n\t\t\t\tconst existingTransform = child.transform.baseVal.getItem(0).matrix\n\t\t\t\tviewBoxTransformMatrix = viewBoxTransformMatrix.multiply(existingTransform.inverse())\n\t\t\t}\n\n\t\t\tcontentContainer.transform.baseVal.appendItem(\n\t\t\t\tcontentContainer.transform.baseVal.createSVGTransformFromMatrix(viewBoxTransformMatrix)\n\t\t\t)\n\t\t\tbreak\n\t\t}\n\t} else {\n\t\t// Clone element\n\t\tif (isSVGAnchorElement(element) && !context.options.keepLinks) {\n\t\t\telementToAppend = context.svgDocument.createElementNS(svgNamespace, 'g')\n\t\t} else {\n\t\t\telementToAppend = element.cloneNode(false) as SVGElement\n\t\t}\n\n\t\t// Remove event handlers\n\t\tfor (const attribute of elementToAppend.attributes) {\n\t\t\tif (attribute.localName.startsWith('on')) {\n\t\t\t\telementToAppend.attributes.removeNamedItemNS(attribute.namespaceURI, attribute.localName)\n\t\t\t} else if (attribute.localName === 'href' && attribute.value.startsWith('javascript:')) {\n\t\t\t\telementToAppend.attributes.removeNamedItemNS(attribute.namespaceURI, attribute.localName)\n\t\t\t}\n\t\t}\n\n\t\tconst window = element.ownerDocument.defaultView\n\t\tassert(window, \"Element's ownerDocument has no defaultView\")\n\n\t\tconst svgViewportElement = element.ownerSVGElement\n\t\tassert(svgViewportElement, 'Expected element to have ownerSVGElement')\n\n\t\tconst styles = window.getComputedStyle(element)\n\n\t\tif (isSVGGraphicsElement(element)) {\n\t\t\tcopyGraphicalPresentationAttributes(styles, elementToAppend, svgViewportElement.viewBox.animVal)\n\n\t\t\tif (isSVGTextContentElement(element)) {\n\t\t\t\tcopyTextStyles(styles, elementToAppend)\n\t\t\t}\n\t\t}\n\n\t\t// Namespace ID references url(#...)\n\t\tfor (const attribute of elementToAppend.attributes) {\n\t\t\tif (attribute.localName === 'href') {\n\t\t\t\tif (attribute.value.startsWith('#')) {\n\t\t\t\t\tattribute.value = attribute.value.replace('#', `#${context.idPrefix}`)\n\t\t\t\t}\n\t\t\t} else if (URL_ID_REFERENCE_REGEX.test(attribute.value)) {\n\t\t\t\tattribute.value = rewriteUrlIdReferences(attribute.value, context)\n\t\t\t}\n\t\t}\n\t\tfor (const property of elementToAppend.style) {\n\t\t\tconst value = elementToAppend.style.getPropertyValue(property)\n\t\t\tif (URL_ID_REFERENCE_REGEX.test(value)) {\n\t\t\t\telementToAppend.style.setProperty(\n\t\t\t\t\tproperty,\n\t\t\t\t\trewriteUrlIdReferences(value, context),\n\t\t\t\t\telementToAppend.style.getPropertyPriority(property)\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\t// Make sure all IDs are unique\n\tif (elementToAppend.id) {\n\t\telementToAppend.id = context.idPrefix + elementToAppend.id\n\t}\n\n\tcontext.currentSvgParent.append(elementToAppend)\n\tfor (const child of element.childNodes) {\n\t\thandleSvgNode(child, { ...context, currentSvgParent: elementToAppend })\n\t}\n}\n\nconst graphicalPresentationAttributes = [\n\t'alignment-baseline',\n\t'baseline-shift',\n\t// 'clip',\n\t'clip-path',\n\t'clip-rule',\n\t'color',\n\t'color-interpolation',\n\t'color-interpolation-filters',\n\t// 'color-profile',\n\t'color-rendering',\n\t// 'cursor',\n\t'direction',\n\t// 'display',\n\t// 'enable-background',\n\t'fill',\n\t'fill-opacity',\n\t'fill-rule',\n\t'filter',\n\t'flood-color',\n\t'flood-opacity',\n\t'image-rendering',\n\t'lighting-color',\n\t'marker-end',\n\t'marker-mid',\n\t'marker-start',\n\t'mask',\n\t'opacity',\n\t// 'overflow',\n\t'pointer-events',\n\t'shape-rendering',\n\t// 'solid-color',\n\t// 'solid-opacity',\n\t'stop-color',\n\t'stop-opacity',\n\t'stroke',\n\t'stroke-dasharray',\n\t'stroke-dashoffset',\n\t'stroke-linecap',\n\t'stroke-linejoin',\n\t'stroke-miterlimit',\n\t'stroke-opacity',\n\t'stroke-width',\n\t'transform',\n\t'vector-effect',\n\t'visibility',\n] as const\n\nconst defaults: Record<typeof graphicalPresentationAttributes[number], string> = {\n\t'alignment-baseline': 'auto',\n\t'baseline-shift': '0px',\n\t'clip-path': 'none',\n\t'clip-rule': 'nonzero',\n\t'color-interpolation-filters': 'linearrgb',\n\t'color-interpolation': 'srgb',\n\t'color-rendering': 'auto',\n\t'fill-opacity': '1',\n\t'fill-rule': 'nonzero',\n\t'flood-color': 'rgb(0, 0, 0)',\n\t'flood-opacity': '1',\n\t'image-rendering': 'auto',\n\t'lighting-color': 'rgb(255, 255, 255)',\n\t'marker-end': 'none',\n\t'marker-mid': 'none',\n\t'marker-start': 'none',\n\t'pointer-events': 'auto',\n\t'shape-rendering': 'auto',\n\t'stop-color': 'rgb(0, 0, 0)',\n\t'stop-opacity': '1',\n\t'stroke-dasharray': 'none',\n\t'stroke-dashoffset': '0px',\n\t'stroke-linecap': 'butt',\n\t'stroke-linejoin': 'miter',\n\t'stroke-miterlimit': '4',\n\t'stroke-opacity': '1',\n\t'stroke-width': '1px',\n\t'vector-effect': 'none',\n\tcolor: '',\n\tdirection: 'ltr',\n\tfill: '',\n\tfilter: 'none',\n\tmask: 'none',\n\topacity: '1',\n\tstroke: '',\n\ttransform: 'none',\n\tvisibility: 'visible',\n}\n\n/**\n * Prefixes all ID references of the form `url(#id)` in the given string.\n */\nfunction rewriteUrlIdReferences(value: string, { idPrefix }: Pick<SvgTraversalContext, 'idPrefix'>): string {\n\tconst parsedValue = cssValueParser(value)\n\tparsedValue.walk(node => {\n\t\tif (node.type !== 'function' || node.value !== 'url') {\n\t\t\treturn\n\t\t}\n\t\tconst urlArgument = node.nodes[0]\n\t\tif (!urlArgument) {\n\t\t\treturn\n\t\t}\n\t\turlArgument.value = urlArgument.value.replace('#', `#${idPrefix}`)\n\t})\n\treturn cssValueParser.stringify(parsedValue.nodes)\n}\n\nfunction copyGraphicalPresentationAttributes(\n\tstyles: CSSStyleDeclaration,\n\ttarget: SVGElement,\n\tviewBox: DOMRectReadOnly\n): void {\n\tfor (const attribute of graphicalPresentationAttributes) {\n\t\tlet value: string | number = styles.getPropertyValue(attribute)\n\t\tif (value && value !== defaults[attribute]) {\n\t\t\tif (value.endsWith('%')) {\n\t\t\t\t// E.g. https://svgwg.org/svg2-draft/painting.html#StrokeWidth\n\t\t\t\t// Percentages:\trefer to the normalized diagonal of the current SVG viewport (see Units)\n\t\t\t\tvalue = parseCSSLength(value, diagonale(viewBox)) ?? 0\n\t\t\t}\n\t\t\ttarget.setAttribute(attribute, value.toString())\n\t\t}\n\t}\n}\n"]}