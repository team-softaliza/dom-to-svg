{"version":3,"file":"util.js","sourceRoot":"","sources":["../../src/test/util.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAA;AAItC,MAAM,CAAC,MAAM,cAAc,GAAG,GAI5B,EAAE;IACH,IAAI,OAA4B,CAAA;IAChC,IAAI,MAAiC,CAAA;IACrC,MAAM,OAAO,GAAG,IAAI,OAAO,CAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE;QACpD,OAAO,GAAG,QAAQ,CAAA;QAClB,MAAM,GAAG,OAAO,CAAA;IACjB,CAAC,CAAC,CAAA;IACF,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,CAAA;AACpC,CAAC,CAAA;AAED,MAAM,UAAU,kBAAkB,CAAC,IAAU;IAC5C,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE;QAC5B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,CAAA;IAC9E,CAAC,CAAC,CAAA;IACF,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;QACxB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IACrB,CAAC,CAAC,CAAA;IACF,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE;QAC5B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IACrB,CAAC,CAAC,CAAA;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,mBAAmB,CAAC,QAAgB;IACzD,IAAI;QACH,OAAO,MAAM,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;KACxC;IAAC,OAAO,KAAK,EAAE;QACf,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;YAC5B,OAAO,SAAS,CAAA;SAChB;QACD,MAAM,KAAK,CAAA;KACX;AACF,CAAC","sourcesContent":["import { readFile } from 'fs/promises'\n\nimport { Page } from 'puppeteer'\n\nexport const createDeferred = <T>(): {\n\tpromise: Promise<T>\n\tresolve: (value: T) => void\n\treject: (value: unknown) => void\n} => {\n\tlet resolve!: (value: T) => void\n\tlet reject!: (value: unknown) => void\n\tconst promise = new Promise<T>((resolve_, reject_) => {\n\t\tresolve = resolve_\n\t\treject = reject_\n\t})\n\treturn { promise, resolve, reject }\n}\n\nexport function forwardBrowserLogs(page: Page): void {\n\tpage.on('console', message => {\n\t\tconsole.log('Browser console:', message.type().toUpperCase(), message.text())\n\t})\n\tpage.on('error', error => {\n\t\tconsole.error(error)\n\t})\n\tpage.on('pageerror', error => {\n\t\tconsole.error(error)\n\t})\n}\n\nexport async function readFileOrUndefined(filePath: string): Promise<string | undefined> {\n\ttry {\n\t\treturn await readFile(filePath, 'utf-8')\n\t} catch (error) {\n\t\tif (error.code === 'ENOENT') {\n\t\t\treturn undefined\n\t\t}\n\t\tthrow error\n\t}\n}\n"]}