{"version":3,"file":"gradients.js","sourceRoot":"","sources":["../src/gradients.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable id-length */\nimport * as gradientParser from 'gradient-parser'\n\nimport { svgNamespace } from './dom.js'\nimport { TraversalContext } from './traversal.js'\n\nconst positionsForOrientation = (\n\torientation: gradientParser.Gradient['orientation']\n): Record<'x1' | 'x2' | 'y1' | 'y2', string> => {\n\tconst positions = {\n\t\tx1: '0%',\n\t\tx2: '0%',\n\t\ty1: '0%',\n\t\ty2: '0%',\n\t}\n\n\tif (orientation?.type === 'angular') {\n\t\tconst anglePI = orientation.value * (Math.PI / 180)\n\t\tpositions.x1 = `${Math.round(50 + Math.sin(anglePI + Math.PI) * 50)}%`\n\t\tpositions.y1 = `${Math.round(50 + Math.cos(anglePI) * 50)}%`\n\t\tpositions.x2 = `${Math.round(50 + Math.sin(anglePI) * 50)}%`\n\t\tpositions.y2 = `${Math.round(50 + Math.cos(anglePI + Math.PI) * 50)}%`\n\t} else if (orientation?.type === 'directional') {\n\t\tswitch (orientation.value) {\n\t\t\tcase 'left':\n\t\t\t\tpositions.x1 = '100%'\n\t\t\t\tbreak\n\n\t\t\tcase 'top':\n\t\t\t\tpositions.y1 = '100%'\n\t\t\t\tbreak\n\n\t\t\tcase 'right':\n\t\t\t\tpositions.x2 = '100%'\n\t\t\t\tbreak\n\n\t\t\tcase 'bottom':\n\t\t\t\tpositions.y2 = '100%'\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn positions\n}\n\nexport function convertLinearGradient(\n\tcss: string,\n\t{ svgDocument }: Pick<TraversalContext, 'svgDocument'>\n): SVGLinearGradientElement {\n\tconst { orientation, colorStops } = gradientParser.parse(css)[0]!\n\tconst { x1, x2, y1, y2 } = positionsForOrientation(orientation)\n\n\tconst getColorStops = (colorStop: gradientParser.ColorStop, index: number): SVGStopElement => {\n\t\tconst offset = `${(index / (colorStops.length - 1)) * 100}%`\n\t\tlet stopColor = 'rgb(0,0,0)'\n\t\tlet stopOpacity = 1\n\n\t\tswitch (colorStop.type) {\n\t\t\tcase 'rgb': {\n\t\t\t\tconst [red, green, blue] = colorStop.value\n\t\t\t\tstopColor = `rgb(${red},${green},${blue})`\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase 'rgba': {\n\t\t\t\tconst [red, green, blue, alpha] = colorStop.value\n\t\t\t\tstopColor = `rgb(${red},${green},${blue})`\n\t\t\t\tstopOpacity = alpha\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase 'hex': {\n\t\t\t\tstopColor = `#${colorStop.value}`\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase 'literal': {\n\t\t\t\tstopColor = colorStop.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst stop = svgDocument.createElementNS(svgNamespace, 'stop')\n\t\tstop.setAttribute('offset', offset)\n\t\tstop.setAttribute('stop-color', stopColor)\n\t\tstop.setAttribute('stop-opacity', stopOpacity.toString())\n\t\treturn stop\n\t}\n\n\tconst linearGradient = svgDocument.createElementNS(svgNamespace, 'linearGradient')\n\tlinearGradient.setAttribute('x1', x1)\n\tlinearGradient.setAttribute('y1', y1)\n\tlinearGradient.setAttribute('x2', x2)\n\tlinearGradient.setAttribute('y2', y2)\n\tlinearGradient.append(...colorStops.map(getColorStops))\n\n\treturn linearGradient\n}\n"]}