{"version":3,"file":"element.js","sourceRoot":"","sources":["../src/element.ts"],"names":[],"mappings":"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","sourcesContent":["import cssValueParser from 'postcss-value-parser'\n\nimport { getAccessibilityAttributes } from './accessibility.js'\nimport {\n\tcopyCssStyles,\n\tisVisible,\n\tisTransparent,\n\thasUniformBorder,\n\tparseCSSLength,\n\tunescapeStringValue,\n\tSide,\n\tgetBorderRadiiForSide,\n\tcalculateOverlappingCurvesFactor,\n} from './css.js'\nimport {\n\tsvgNamespace,\n\tisHTMLAnchorElement,\n\tisHTMLImageElement,\n\tisHTMLInputElement,\n\tisHTMLElement,\n\tisSVGSVGElement,\n} from './dom.js'\nimport { convertLinearGradient } from './gradients.js'\nimport {\n\tcreateStackingLayers,\n\testablishesStackingContext,\n\tdetermineStackingLayer,\n\tStackingLayers,\n\tsortStackingLayerChildren,\n\tcleanupStackingLayerChildren,\n} from './stacking.js'\nimport { handleSvgNode } from './svg.js'\nimport { copyTextStyles } from './text.js'\nimport { TraversalContext, walkNode } from './traversal.js'\nimport { doRectanglesIntersect, isTaggedUnionMember } from './util.js'\n\nexport function handleElement(element: Element, context: Readonly<TraversalContext>): void {\n\tconst cleanupFunctions: (() => void)[] = []\n\n\ttry {\n\t\tconst window = element.ownerDocument.defaultView\n\t\tif (!window) {\n\t\t\tthrow new Error(\"Element's ownerDocument has no defaultView\")\n\t\t}\n\n\t\tconst bounds = element.getBoundingClientRect() // Includes borders\n\t\tconst rectanglesIntersect = doRectanglesIntersect(bounds, context.options.captureArea)\n\n\t\tconst styles = window.getComputedStyle(element)\n\t\tconst parentStyles = element.parentElement && window.getComputedStyle(element.parentElement)\n\n\t\tconst svgContainer =\n\t\t\tisHTMLAnchorElement(element) && context.options.keepLinks\n\t\t\t\t? createSvgAnchor(element, context)\n\t\t\t\t: context.svgDocument.createElementNS(svgNamespace, 'g')\n\n\t\t// Add IDs, classes, debug info\n\t\tsvgContainer.dataset.tag = element.tagName.toLowerCase()\n\t\tconst id = element.id || context.getUniqueId(element.classList[0] || element.tagName.toLowerCase())\n\t\tsvgContainer.id = id\n\t\tconst className = element.getAttribute('class')\n\t\tif (className) {\n\t\t\tsvgContainer.setAttribute('class', className)\n\t\t}\n\n\t\t// Title\n\t\tif (isHTMLElement(element) && element.title) {\n\t\t\tconst svgTitle = context.svgDocument.createElementNS(svgNamespace, 'title')\n\t\t\tsvgTitle.textContent = element.title\n\t\t\tsvgContainer.prepend(svgTitle)\n\t\t}\n\n\t\t// Which parent should the container itself be appended to?\n\t\tconst stackingLayerName = determineStackingLayer(styles, parentStyles)\n\t\tconst stackingLayer = stackingLayerName\n\t\t\t? context.stackingLayers[stackingLayerName]\n\t\t\t: context.parentStackingLayer\n\t\tif (stackingLayer) {\n\t\t\tcontext.currentSvgParent.setAttribute(\n\t\t\t\t'aria-owns',\n\t\t\t\t[context.currentSvgParent.getAttribute('aria-owns'), svgContainer.id].filter(Boolean).join(' ')\n\t\t\t)\n\t\t}\n\t\t// If the parent is within the same stacking layer, append to the parent.\n\t\t// Otherwise append to the right stacking layer.\n\t\tconst elementToAppendTo =\n\t\t\tcontext.parentStackingLayer === stackingLayer ? context.currentSvgParent : stackingLayer\n\t\tsvgContainer.dataset.zIndex = styles.zIndex // Used for sorting\n\t\telementToAppendTo.append(svgContainer)\n\n\t\t// If the element establishes a stacking context, create subgroups for each stacking layer.\n\t\tlet childContext: TraversalContext\n\t\tlet backgroundContainer: SVGElement\n\t\tlet ownStackingLayers: StackingLayers | undefined\n\t\tif (establishesStackingContext(styles, parentStyles)) {\n\t\t\townStackingLayers = createStackingLayers(svgContainer)\n\t\t\tbackgroundContainer = ownStackingLayers.rootBackgroundAndBorders\n\t\t\tchildContext = {\n\t\t\t\t...context,\n\t\t\t\tcurrentSvgParent: svgContainer,\n\t\t\t\tstackingLayers: ownStackingLayers,\n\t\t\t\tparentStackingLayer: stackingLayer,\n\t\t\t}\n\t\t} else {\n\t\t\tbackgroundContainer = svgContainer\n\t\t\tchildContext = {\n\t\t\t\t...context,\n\t\t\t\tcurrentSvgParent: svgContainer,\n\t\t\t\tparentStackingLayer: stackingLayer,\n\t\t\t}\n\t\t}\n\n\t\t// Opacity\n\t\tif (styles.opacity !== '1') {\n\t\t\tsvgContainer.setAttribute('opacity', styles.opacity)\n\t\t}\n\n\t\t// Accessibility\n\t\tfor (const [name, value] of getAccessibilityAttributes(element, context)) {\n\t\t\tsvgContainer.setAttribute(name, value)\n\t\t}\n\n\t\t// Handle ::before and ::after by creating temporary child elements in the DOM.\n\t\t// Avoid infinite loop, in case `element` already is already a synthetic element created by us for a pseudo element.\n\t\tif (isHTMLElement(element) && !element.dataset.pseudoElement) {\n\t\t\tconst handlePseudoElement = (\n\t\t\t\tpseudoSelector: '::before' | '::after',\n\t\t\t\tposition: 'prepend' | 'append'\n\t\t\t): void => {\n\t\t\t\tconst pseudoElementStyles = window.getComputedStyle(element, pseudoSelector)\n\t\t\t\tconst content = cssValueParser(pseudoElementStyles.content).nodes.find(\n\t\t\t\t\tisTaggedUnionMember('type', 'string' as const)\n\t\t\t\t)\n\t\t\t\tif (!content) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t// Pseudo elements are inline by default (like a span)\n\t\t\t\tconst span = element.ownerDocument.createElement('span')\n\t\t\t\tspan.dataset.pseudoElement = pseudoSelector\n\t\t\t\tcopyCssStyles(pseudoElementStyles, span.style)\n\t\t\t\tspan.textContent = unescapeStringValue(content.value)\n\t\t\t\telement.dataset.pseudoElementOwner = id\n\t\t\t\tcleanupFunctions.push(() => element.removeAttribute('data-pseudo-element-owner'))\n\t\t\t\tconst style = element.ownerDocument.createElement('style')\n\t\t\t\t// Hide the *actual* pseudo element temporarily while we have a real DOM equivalent in the DOM\n\t\t\t\tstyle.textContent = `[data-pseudo-element-owner=\"${id}\"]${pseudoSelector} { display: none !important; }`\n\t\t\t\telement.before(style)\n\t\t\t\tcleanupFunctions.push(() => style.remove())\n\t\t\t\telement[position](span)\n\t\t\t\tcleanupFunctions.push(() => span.remove())\n\t\t\t}\n\t\t\thandlePseudoElement('::before', 'prepend')\n\t\t\thandlePseudoElement('::after', 'append')\n\t\t\t// TODO handle ::marker etc\n\t\t}\n\n\t\tif (rectanglesIntersect) {\n\t\t\taddBackgroundAndBorders(styles, bounds, backgroundContainer, window, context)\n\t\t}\n\n\t\t// If element is overflow: hidden, create a masking rectangle to hide any overflowing content of any descendants.\n\t\t// Use <mask> instead of <clipPath> as Figma supports <mask>, but not <clipPath>.\n\t\tif (styles.overflow !== 'visible') {\n\t\t\tconst mask = context.svgDocument.createElementNS(svgNamespace, 'mask')\n\t\t\tmask.id = context.getUniqueId('mask-for-' + id)\n\t\t\tconst visibleRectangle = createBox(bounds, context)\n\t\t\tvisibleRectangle.setAttribute('fill', '#ffffff')\n\t\t\tmask.append(visibleRectangle)\n\t\t\tsvgContainer.append(mask)\n\t\t\tsvgContainer.setAttribute('mask', `url(#${mask.id})`)\n\t\t\tchildContext = {\n\t\t\t\t...childContext,\n\t\t\t\tancestorMasks: [{ mask, forElement: element }, ...childContext.ancestorMasks],\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tisHTMLElement(element) &&\n\t\t\t(styles.position === 'absolute' || styles.position === 'fixed') &&\n\t\t\tcontext.ancestorMasks.length > 0 &&\n\t\t\telement.offsetParent\n\t\t) {\n\t\t\t// Absolute and fixed elements are out of the flow and will bleed out of an `overflow: hidden` ancestor\n\t\t\t// as long as their offsetParent is higher up than the mask element.\n\t\t\tfor (const { mask, forElement } of context.ancestorMasks) {\n\t\t\t\tif (element.offsetParent.contains(forElement) || element.offsetParent === forElement) {\n\t\t\t\t\t// Add a cutout to the ancestor mask\n\t\t\t\t\tconst visibleRectangle = createBox(bounds, context)\n\t\t\t\t\tvisibleRectangle.setAttribute('fill', '#ffffff')\n\t\t\t\t\tmask.append(visibleRectangle)\n\t\t\t\t} else {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\trectanglesIntersect &&\n\t\t\tisHTMLImageElement(element) &&\n\t\t\t// Make sure the element has a src/srcset attribute (the relative URL). `element.src` is absolute and always defined.\n\t\t\t(element.getAttribute('src') || element.getAttribute('srcset'))\n\t\t) {\n\t\t\tconst svgImage = context.svgDocument.createElementNS(svgNamespace, 'image')\n\t\t\tsvgImage.id = `${id}-image` // read by inlineResources()\n\t\t\tsvgImage.setAttribute('xlink:href', element.currentSrc || element.src)\n\t\t\tconst paddingLeft = parseCSSLength(styles.paddingLeft, bounds.width) ?? 0\n\t\t\tconst paddingRight = parseCSSLength(styles.paddingRight, bounds.width) ?? 0\n\t\t\tconst paddingTop = parseCSSLength(styles.paddingTop, bounds.height) ?? 0\n\t\t\tconst paddingBottom = parseCSSLength(styles.paddingBottom, bounds.height) ?? 0\n\t\t\tsvgImage.setAttribute('x', (bounds.x + paddingLeft).toString())\n\t\t\tsvgImage.setAttribute('y', (bounds.y + paddingTop).toString())\n\t\t\tsvgImage.setAttribute('width', (bounds.width - paddingLeft - paddingRight).toString())\n\t\t\tsvgImage.setAttribute('height', (bounds.height - paddingTop - paddingBottom).toString())\n\t\t\tif (element.alt) {\n\t\t\t\tsvgImage.setAttribute('aria-label', element.alt)\n\t\t\t}\n\t\t\tsvgContainer.append(svgImage)\n\t\t} else if (rectanglesIntersect && isHTMLInputElement(element) && bounds.width > 0 && bounds.height > 0) {\n\t\t\t// Handle button labels or input field content\n\t\t\tif (element.value) {\n\t\t\t\tconst svgTextElement = context.svgDocument.createElementNS(svgNamespace, 'text')\n\t\t\t\tcopyTextStyles(styles, svgTextElement)\n\t\t\t\tsvgTextElement.setAttribute('dominant-baseline', 'central')\n\t\t\t\tsvgTextElement.setAttribute('xml:space', 'preserve')\n\t\t\t\tsvgTextElement.setAttribute(\n\t\t\t\t\t'x',\n\t\t\t\t\t(bounds.x + (parseCSSLength(styles.paddingLeft, bounds.width) ?? 0)).toString()\n\t\t\t\t)\n\t\t\t\tconst top = bounds.top + (parseCSSLength(styles.paddingTop, bounds.height) ?? 0)\n\t\t\t\tconst bottom = bounds.bottom + (parseCSSLength(styles.paddingBottom, bounds.height) ?? 0)\n\t\t\t\tconst middle = (top + bottom) / 2\n\t\t\t\tsvgTextElement.setAttribute('y', middle.toString())\n\t\t\t\tsvgTextElement.textContent = element.value\n\t\t\t\tchildContext.stackingLayers.inFlowInlineLevelNonPositionedDescendants.append(svgTextElement)\n\t\t\t}\n\t\t} else if (rectanglesIntersect && isSVGSVGElement(element) && isVisible(styles)) {\n\t\t\thandleSvgNode(element, { ...childContext, idPrefix: `${id}-` })\n\t\t} else {\n\t\t\t// Walk children even if rectangles don't intersect,\n\t\t\t// because children can overflow the parent's bounds as long as overflow: visible (default).\n\t\t\tfor (const child of element.childNodes) {\n\t\t\t\twalkNode(child, childContext)\n\t\t\t}\n\t\t\tif (ownStackingLayers) {\n\t\t\t\tsortStackingLayerChildren(ownStackingLayers)\n\t\t\t\tcleanupStackingLayerChildren(ownStackingLayers)\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tfor (const cleanup of cleanupFunctions) {\n\t\t\tcleanup()\n\t\t}\n\t}\n}\n\nfunction addBackgroundAndBorders(\n\tstyles: CSSStyleDeclaration,\n\tbounds: DOMRect,\n\tbackgroundAndBordersContainer: SVGElement,\n\twindow: Window,\n\tcontext: Pick<TraversalContext, 'getUniqueId' | 'svgDocument'>\n): void {\n\tif (isVisible(styles)) {\n\t\tif (\n\t\t\tbounds.width > 0 &&\n\t\t\tbounds.height > 0 &&\n\t\t\t(!isTransparent(styles.backgroundColor) || hasUniformBorder(styles) || styles.backgroundImage !== 'none')\n\t\t) {\n\t\t\tconst box = createBackgroundAndBorderBox(bounds, styles, context)\n\t\t\tbackgroundAndBordersContainer.append(box)\n\t\t\tif (styles.backgroundImage !== 'none') {\n\t\t\t\tconst backgrounds = cssValueParser(styles.backgroundImage)\n\t\t\t\t\t.nodes.filter(isTaggedUnionMember('type', 'function' as const))\n\t\t\t\t\t.reverse()\n\t\t\t\tconst xBackgroundPositions = styles.backgroundPositionX.split(/\\s*,\\s*/g)\n\t\t\t\tconst yBackgroundPositions = styles.backgroundPositionY.split(/\\s*,\\s*/g)\n\t\t\t\tconst backgroundRepeats = styles.backgroundRepeat.split(/\\s*,\\s*/g)\n\t\t\t\tfor (const [index, backgroundNode] of backgrounds.entries()) {\n\t\t\t\t\tconst backgroundPositionX = parseCSSLength(xBackgroundPositions[index]!, bounds.width) ?? 0\n\t\t\t\t\tconst backgroundPositionY = parseCSSLength(yBackgroundPositions[index]!, bounds.height) ?? 0\n\t\t\t\t\tconst backgroundRepeat = backgroundRepeats[index]\n\t\t\t\t\tif (backgroundNode.value === 'url' && backgroundNode.nodes[0]) {\n\t\t\t\t\t\tconst urlArgument = backgroundNode.nodes[0]\n\t\t\t\t\t\tconst image = context.svgDocument.createElementNS(svgNamespace, 'image')\n\t\t\t\t\t\timage.id = context.getUniqueId('background-image') // read by inlineResources()\n\t\t\t\t\t\tconst [cssWidth = 'auto', cssHeight = 'auto'] = styles.backgroundSize.split(' ')\n\t\t\t\t\t\tconst backgroundWidth = parseCSSLength(cssWidth, bounds.width) ?? bounds.width\n\t\t\t\t\t\tconst backgroundHeight = parseCSSLength(cssHeight, bounds.height) ?? bounds.height\n\t\t\t\t\t\timage.setAttribute('width', backgroundWidth.toString())\n\t\t\t\t\t\timage.setAttribute('height', backgroundHeight.toString())\n\t\t\t\t\t\tif (cssWidth !== 'auto' && cssHeight !== 'auto') {\n\t\t\t\t\t\t\timage.setAttribute('preserveAspectRatio', 'none')\n\t\t\t\t\t\t} else if (styles.backgroundSize === 'contain') {\n\t\t\t\t\t\t\timage.setAttribute('preserveAspectRatio', 'xMidYMid meet')\n\t\t\t\t\t\t} else if (styles.backgroundSize === 'cover') {\n\t\t\t\t\t\t\timage.setAttribute('preserveAspectRatio', 'xMidYMid slice')\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Technically not correct, because relative URLs should be resolved relative to the stylesheet,\n\t\t\t\t\t\t// not the page. But we have no means to know what stylesheet the style came from\n\t\t\t\t\t\t// (unless we iterate through all rules in all style sheets and find the matching one).\n\t\t\t\t\t\tconst url = new URL(unescapeStringValue(urlArgument.value), window.location.href)\n\t\t\t\t\t\timage.setAttribute('xlink:href', url.href)\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tbackgroundRepeat === 'no-repeat' ||\n\t\t\t\t\t\t\t(backgroundPositionX === 0 &&\n\t\t\t\t\t\t\t\tbackgroundPositionY === 0 &&\n\t\t\t\t\t\t\t\tbackgroundWidth === bounds.width &&\n\t\t\t\t\t\t\t\tbackgroundHeight === bounds.height)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\timage.setAttribute('x', bounds.x.toString())\n\t\t\t\t\t\t\timage.setAttribute('y', bounds.y.toString())\n\t\t\t\t\t\t\tbackgroundAndBordersContainer.append(image)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\timage.setAttribute('x', '0')\n\t\t\t\t\t\t\timage.setAttribute('y', '0')\n\t\t\t\t\t\t\tconst pattern = context.svgDocument.createElementNS(svgNamespace, 'pattern')\n\t\t\t\t\t\t\tpattern.setAttribute('patternUnits', 'userSpaceOnUse')\n\t\t\t\t\t\t\tpattern.setAttribute('patternContentUnits', 'userSpaceOnUse')\n\t\t\t\t\t\t\tpattern.setAttribute('x', (bounds.x + backgroundPositionX).toString())\n\t\t\t\t\t\t\tpattern.setAttribute('y', (bounds.y + backgroundPositionY).toString())\n\t\t\t\t\t\t\tpattern.setAttribute(\n\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\t(backgroundRepeat === 'repeat' || backgroundRepeat === 'repeat-x'\n\t\t\t\t\t\t\t\t\t? backgroundWidth\n\t\t\t\t\t\t\t\t\t: // If background shouldn't repeat on this axis, make the tile as big as the element so the repetition is cut off.\n\t\t\t\t\t\t\t\t\t  backgroundWidth + bounds.x + backgroundPositionX\n\t\t\t\t\t\t\t\t).toString()\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tpattern.setAttribute(\n\t\t\t\t\t\t\t\t'height',\n\t\t\t\t\t\t\t\t(backgroundRepeat === 'repeat' || backgroundRepeat === 'repeat-y'\n\t\t\t\t\t\t\t\t\t? backgroundHeight\n\t\t\t\t\t\t\t\t\t: // If background shouldn't repeat on this axis, make the tile as big as the element so the repetition is cut off.\n\t\t\t\t\t\t\t\t\t  backgroundHeight + bounds.y + backgroundPositionY\n\t\t\t\t\t\t\t\t).toString()\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tpattern.id = context.getUniqueId('pattern')\n\t\t\t\t\t\t\tpattern.append(image)\n\t\t\t\t\t\t\tbox.before(pattern)\n\t\t\t\t\t\t\tbox.setAttribute('fill', `url(#${pattern.id})`)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (/^(-webkit-)?linear-gradient$/.test(backgroundNode.value)) {\n\t\t\t\t\t\tconst linearGradientCss = cssValueParser.stringify(backgroundNode)\n\t\t\t\t\t\tconst svgLinearGradient = convertLinearGradient(linearGradientCss, context)\n\t\t\t\t\t\tif (backgroundPositionX !== 0 || backgroundPositionY !== 0) {\n\t\t\t\t\t\t\tsvgLinearGradient.setAttribute(\n\t\t\t\t\t\t\t\t'gradientTransform',\n\t\t\t\t\t\t\t\t`translate(${backgroundPositionX}, ${backgroundPositionY})`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsvgLinearGradient.id = context.getUniqueId('linear-gradient')\n\t\t\t\t\t\tbox.before(svgLinearGradient)\n\t\t\t\t\t\tbox.setAttribute('fill', `url(#${svgLinearGradient.id})`)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!hasUniformBorder(styles)) {\n\t\t\t// Draw lines for each border\n\t\t\tfor (const borderLine of createBorders(styles, bounds, context)) {\n\t\t\t\tbackgroundAndBordersContainer.append(borderLine)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction createBox(bounds: DOMRectReadOnly, context: Pick<TraversalContext, 'svgDocument'>): SVGRectElement {\n\tconst box = context.svgDocument.createElementNS(svgNamespace, 'rect')\n\n\t// TODO consider rotation\n\tbox.setAttribute('width', bounds.width.toString())\n\tbox.setAttribute('height', bounds.height.toString())\n\tbox.setAttribute('x', bounds.x.toString())\n\tbox.setAttribute('y', bounds.y.toString())\n\n\treturn box\n}\n\nfunction createBackgroundAndBorderBox(\n\tbounds: DOMRectReadOnly,\n\tstyles: CSSStyleDeclaration,\n\tcontext: Pick<TraversalContext, 'svgDocument'>\n): SVGRectElement {\n\tconst background = createBox(bounds, context)\n\n\t// TODO handle background image and other properties\n\tif (styles.backgroundColor) {\n\t\tbackground.setAttribute('fill', styles.backgroundColor)\n\t}\n\n\tif (hasUniformBorder(styles)) {\n\t\t// Uniform border, use stroke\n\t\t// Cannot use borderColor/borderWidth directly as in Firefox those are empty strings.\n\t\t// Need to get the border property from some specific side (they are all the same in this condition).\n\t\t// https://stackoverflow.com/questions/41696063/getcomputedstyle-returns-empty-strings-on-ff-when-instead-crome-returns-a-comp\n\t\tbackground.setAttribute('stroke', styles.borderTopColor)\n\t\tbackground.setAttribute('stroke-width', styles.borderTopWidth)\n\t\tif (styles.borderTopStyle === 'dashed') {\n\t\t\t// > Displays a series of short square-ended dashes or line segments.\n\t\t\t// > The exact size and length of the segments are not defined by the specification and are implementation-specific.\n\t\t\tbackground.setAttribute('stroke-dasharray', '1')\n\t\t}\n\t}\n\n\t// Set border radius\n\t// Approximation, always assumes uniform border-radius by using the top-left horizontal radius and the top-left vertical radius for all corners.\n\t// TODO support irregular border radii on all corners by drawing border as a <path>.\n\tconst overlappingCurvesFactor = calculateOverlappingCurvesFactor(styles, bounds)\n\tconst radiusX = getBorderRadiiForSide('top', styles, bounds)[0] * overlappingCurvesFactor\n\tconst radiusY = getBorderRadiiForSide('left', styles, bounds)[0] * overlappingCurvesFactor\n\tif (radiusX !== 0) {\n\t\tbackground.setAttribute('rx', radiusX.toString())\n\t}\n\tif (radiusY !== 0) {\n\t\tbackground.setAttribute('ry', radiusY.toString())\n\t}\n\n\treturn background\n}\n\nfunction* createBorders(\n\tstyles: CSSStyleDeclaration,\n\tbounds: DOMRectReadOnly,\n\tcontext: Pick<TraversalContext, 'svgDocument'>\n): Iterable<SVGLineElement> {\n\tfor (const side of ['top', 'bottom', 'right', 'left'] as const) {\n\t\tif (hasBorder(styles, side)) {\n\t\t\tyield createBorder(styles, bounds, side, context)\n\t\t}\n\t}\n}\n\nfunction hasBorder(styles: CSSStyleDeclaration, side: Side): boolean {\n\treturn (\n\t\t!!styles.getPropertyValue(`border-${side}-color`) &&\n\t\t!isTransparent(styles.getPropertyValue(`border-${side}-color`)) &&\n\t\tstyles.getPropertyValue(`border-${side}-width`) !== '0px'\n\t)\n}\n\nfunction createBorder(\n\tstyles: CSSStyleDeclaration,\n\tbounds: DOMRectReadOnly,\n\tside: Side,\n\tcontext: Pick<TraversalContext, 'svgDocument'>\n): SVGLineElement {\n\t// TODO handle border-radius for non-uniform borders\n\tconst border = context.svgDocument.createElementNS(svgNamespace, 'line')\n\tborder.setAttribute('stroke-linecap', 'square')\n\tconst color = styles.getPropertyValue(`border-${side}-color`)\n\tborder.setAttribute('stroke', color)\n\tborder.setAttribute('stroke-width', styles.getPropertyValue(`border-${side}-width`))\n\n\t// Handle inset/outset borders\n\tconst borderStyle = styles.getPropertyValue(`border-${side}-style`)\n\tif (\n\t\t(borderStyle === 'inset' && (side === 'top' || side === 'left')) ||\n\t\t(borderStyle === 'outset' && (side === 'right' || side === 'bottom'))\n\t) {\n\t\tconst match = color.match(/rgba?\\((\\d+), (\\d+), (\\d+)(?:, ([\\d.]+))?\\)/)\n\t\tif (!match) {\n\t\t\tthrow new Error(`Unexpected color: ${color}`)\n\t\t}\n\t\tconst components = match.slice(1, 4).map(value => parseInt(value, 10) * 0.3)\n\t\tif (match[4]) {\n\t\t\tcomponents.push(parseFloat(match[4]))\n\t\t}\n\t\t// Low-light border\n\t\t// https://stackoverflow.com/questions/4147940/how-do-browsers-determine-which-exact-colors-to-use-for-border-inset-or-outset\n\t\tborder.setAttribute('stroke', `rgba(${components.join(', ')})`)\n\t}\n\n\tif (side === 'top') {\n\t\tborder.setAttribute('x1', bounds.left.toString())\n\t\tborder.setAttribute('x2', bounds.right.toString())\n\t\tborder.setAttribute('y1', bounds.top.toString())\n\t\tborder.setAttribute('y2', bounds.top.toString())\n\t} else if (side === 'left') {\n\t\tborder.setAttribute('x1', bounds.left.toString())\n\t\tborder.setAttribute('x2', bounds.left.toString())\n\t\tborder.setAttribute('y1', bounds.top.toString())\n\t\tborder.setAttribute('y2', bounds.bottom.toString())\n\t} else if (side === 'right') {\n\t\tborder.setAttribute('x1', bounds.right.toString())\n\t\tborder.setAttribute('x2', bounds.right.toString())\n\t\tborder.setAttribute('y1', bounds.top.toString())\n\t\tborder.setAttribute('y2', bounds.bottom.toString())\n\t} else if (side === 'bottom') {\n\t\tborder.setAttribute('x1', bounds.left.toString())\n\t\tborder.setAttribute('x2', bounds.right.toString())\n\t\tborder.setAttribute('y1', bounds.bottom.toString())\n\t\tborder.setAttribute('y2', bounds.bottom.toString())\n\t}\n\treturn border\n}\n\nfunction createSvgAnchor(element: HTMLAnchorElement, context: Pick<TraversalContext, 'svgDocument'>): SVGAElement {\n\tconst svgAnchor = context.svgDocument.createElementNS(svgNamespace, 'a')\n\tif (element.href && !element.href.startsWith('javascript:')) {\n\t\tsvgAnchor.setAttribute('href', element.href)\n\t}\n\tif (element.rel) {\n\t\tsvgAnchor.setAttribute('rel', element.rel)\n\t}\n\tif (element.target) {\n\t\tsvgAnchor.setAttribute('target', element.target)\n\t}\n\tif (element.download) {\n\t\tsvgAnchor.setAttribute('download', element.download)\n\t}\n\treturn svgAnchor\n}\n"]}